// Core modules
import { initializeFirebase } from './modules/firebase-init.js';

// Auth
import { 
  loginWithEmail, 
  registerWithEmail, 
  logoutUser, 
  onAuthStateChange 
} from './modules/auth.js';

// Firestore
import { 
  addScannedItem, 
  getScannedItems, 
  deleteScannedItem, 
  getExpectedItems,
  addExpectedItem 
} from './modules/firestore.js';

// Import/Export
import {
  readExcelFile,
  importToFirestore,
  exportToExcel
} from './modules/import-export.js';

// Notifications
import {
  showSuccess,
  showError,
  showMessage
} from './modules/notifications.js';

// Rendering
import {
  renderTable,
  renderExpectedItems
} from './modules/render.js';

// Barcode
import {
  printBarcode,
  generateBarcodeSvg
} from './modules/barcode.js';

// Scanner
import {
  setupScannerHandlers,
  handleScanInput,
  clearScannerInput,
  simulateBarcodeScan
} from './modules/scanner.js';

// UI Update
import {
  updateCurrentBarcode,
  updateDashboardStats,
  resetUI
} from './modules/ui-update.js';

// Polyfills and styles
import 'core-js/stable';
import 'regenerator-runtime/runtime';
import './styles/main.css';
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª–∏—Ñ–∏–ª–ª—ã
import 'core-js/stable';
import 'regenerator-runtime/runtime';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏
import './styles/main.css';

// –Ø–≤–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º HMR
if (module.hot) {
  module.hot.decline();
}

console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
function domReady() {
  return new Promise(resolve => {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', resolve);
    } else {
      resolve();
    }
  });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
function checkDomElements() {
  const authContainer = document.getElementById('authContainer');
  const appContainer = document.getElementById('appContainer');
  
  console.log('Auth container exists:', !!authContainer);
  console.log('App container exists:', !!appContainer);
  
  return authContainer && appContainer;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
function checkExternalLibraries() {
  console.log('Firebase:', typeof firebase);
  console.log('JsBarcode:', typeof JsBarcode);
  console.log('XLSX:', typeof XLSX);
  
  return typeof firebase !== 'undefined' && 
         typeof JsBarcode !== 'undefined' && 
         typeof XLSX !== 'undefined';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
function waitForExternalLibraries() {
  return new Promise((resolve) => {
    const checkLibraries = () => {
      if (typeof firebase !== 'undefined' && 
          typeof JsBarcode !== 'undefined' && 
          typeof XLSX !== 'undefined') {
        resolve();
      } else {
        setTimeout(checkLibraries, 100);
      }
    };
    checkLibraries();
  });
}

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º—ã
function setupAuthFormHandlers() {
  const emailInput = document.getElementById('emailInput');
  const passwordInput = document.getElementById('passwordInput');
  const loginBtn = document.getElementById('loginBtn');
  const registerBtn = document.getElementById('registerBtn');
  
  if (emailInput && passwordInput && loginBtn && registerBtn) {
    console.log('‚úÖ –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –Ω–∞–π–¥–µ–Ω—ã');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    loginBtn.addEventListener('click', handleLogin);
    registerBtn.addEventListener('click', handleRegister);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter
    emailInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        passwordInput.focus();
      }
    });

    passwordInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        handleLogin();
      }
    });
    
    return true;
  } else {
    console.error('‚ùå –ù–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –Ω–∞–π–¥–µ–Ω—ã');
    return false;
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
async function handleLogin() {
  const email = document.getElementById('emailInput').value;
  const password = document.getElementById('passwordInput').value;
  
  if (!email || !password) {
    alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
    return;
  }
  
  try {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const loginBtn = document.getElementById('loginBtn');
    loginBtn.textContent = '–í—Ö–æ–¥...';
    loginBtn.disabled = true;
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥
    await loginWithEmail(email, password);
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    document.getElementById('authContainer').style.display = 'none';
    document.getElementById('appContainer').style.display = 'block';
    
  } catch (error) {
    alert(`–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${error.message}`);
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
    const loginBtn = document.getElementById('loginBtn');
    loginBtn.textContent = '–í–æ–π—Ç–∏';
    loginBtn.disabled = false;
  }
}

async function handleRegister() {
  const email = document.getElementById('emailInput').value;
  const password = document.getElementById('passwordInput').value;
  
  if (!email || !password) {
    alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
    return;
  }
  
  try {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const registerBtn = document.getElementById('registerBtn');
    registerBtn.textContent = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...';
    registerBtn.disabled = true;
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    await registerWithEmail(email, password);
    alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.');
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.getElementById('emailInput').value = '';
    document.getElementById('passwordInput').value = '';
    
  } catch (error) {
    alert(`–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${error.message}`);
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
    const registerBtn = document.getElementById('registerBtn');
    registerBtn.textContent = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è';
    registerBtn.disabled = false;
  }
}

async function handleLogout() {
  try {
    await logoutUser();
    document.getElementById('authContainer').style.display = 'block';
    document.getElementById('appContainer').style.display = 'none';
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
    alert(`–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: ${error.message}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
function initMainApp() {
  console.log('Initializing main application...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≥—Ä—É–∂–µ–Ω
  const appContainer = document.getElementById('appContainer');
  if (!appContainer) {
    console.error('App container not found!');
    return;
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  loadData();
  
  // –î–æ–±–∞–≤–ª—è–µ–º real-time listeners
  setupRealTimeListeners();
}
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  appContainer.innerHTML = `
    <!-- –•–µ–¥–µ—Ä -->
    <header class="header">
      <div class="header-title">
        <h1>üì¶ –°–∫–∞–Ω–µ—Ä —Å–∫–ª–∞–¥–∞</h1>
        <div class="device-id-header">–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${generateDeviceId()}</div>
      </div>
      <div class="user-info">
        <span id="userEmail">${firebase.auth().currentUser?.email || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</span>
        <button class="logout-btn">–í—ã–π—Ç–∏</button>
      </div>
    </header>

    <!-- –û—Å–Ω–æ–≤–Ω–æ–π –≤—Ä–∞–ø–ø–µ—Ä -->
    <div class="main-wrapper">
      <!-- –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å -->
      <aside class="left-sidebar">
        <div class="expected-items-panel">
          <h4>–û–∂–∏–¥–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã</h4>
          <div class="search-box">
            <input type="text" placeholder="–ü–æ–∏—Å–∫ –ø–æ —à—Ç—Ä–∏—Ö–∫–æ–¥—É...">
            <button class="clear-filter-btn-small">√ó</button>
          </div>
          <div class="expected-header">
            <span class="col-barcode">–®—Ç—Ä–∏—Ö–∫–æ–¥</span>
            <span class="col-expected">–û–∂–∏–¥–∞–µ—Ç—Å—è</span>
            <span class="col-scanned">–û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</span>
            <span class="col-remaining">–û—Å—Ç–∞–ª–æ—Å—å</span>
          </div>
          <div class="expected-list" id="expectedList">
            <!-- –°—é–¥–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –æ–∂–∏–¥–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã -->
          </div>
        </div>
      </aside>

      <!-- –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ -->
      <main class="main-content">
        <!-- –î–∞—à–±–æ—Ä–¥ -->
        <div id="compactDashboard" class="compact-dashboard">
          <div class="dashboard-grid">
            <div class="stat-card primary">
              <div class="stat-value">0</div>
              <div class="stat-label">–í—Å–µ–≥–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</div>
              <div class="stat-subtext">–∑–∞ —Å–µ–≥–æ–¥–Ω—è</div>
            </div>
            <div class="stat-card success">
              <div class="stat-value">0</div>
              <div class="stat-label">–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤</div>
              <div class="progress-bar"><div class="progress-fill" style="width: 0%"></div></div>
            </div>
            <div class="stat-card info">
              <div class="stat-value">0%</div>
              <div class="stat-label">–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞</div>
              <div class="stat-subtext">–æ—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö</div>
            </div>
          </div>
        </div>

        <!-- –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
        <div class="current-info">
          <div class="current-values">
            <div class="current-item">
              <span class="current-label">–¢–µ–∫—É—â–∏–π —à—Ç—Ä–∏—Ö–∫–æ–¥:</span>
              <span class="current-value" id="currentBarcode">-</span>
            </div>
            <div class="current-item">
              <span class="current-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</span>
              <input type="number" id="quantityInput" value="1" min="1" class="current-value" style="width: 60px;">
            </div>
          </div>
          <div class="prefix-settings">
            <div class="prefix-group">
              <label>–ü—Ä–µ—Ñ–∏–∫—Å 1</label>
              <input type="text" class="prefix-input" placeholder="AAA">
            </div>
            <div class="prefix-group">
              <label>–ü—Ä–µ—Ñ–∏–∫—Å 2</label>
              <input type="text" class="prefix-input" placeholder="BBB">
            </div>
          </div>
          <div class="print-section">
            <button class="print-btn" onclick="printBarcode()">–ü–µ—á–∞—Ç—å —à—Ç—Ä–∏—Ö–∫–æ–¥–∞</button>
          </div>
        </div>

        <!-- –û–±–ª–∞—Å—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è -->
        <div class="scan-area">
          <div class="scan-input-container">
            <input type="text" id="scanInput" placeholder="–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —à—Ç—Ä–∏—Ö–∫–æ–¥ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é..." autocomplete="off">
            <button onclick="clearScan()">–û—á–∏—Å—Ç–∏—Ç—å</button>
          </div>
        </div>

        <!-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü–µ–π -->
        <div class="table-controls">
          <div class="filter-container">
            <input type="text" class="filter-input" placeholder="–§–∏–ª—å—Ç—Ä –ø–æ —à—Ç—Ä–∏—Ö–∫–æ–¥—É...">
            <button class="clear-filter-btn-small">√ó</button>
          </div>
          <div class="view-toggle">
            <button class="active">–í—Å–µ</button>
            <button>–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è</button>
          </div>
        </div>

        <!-- –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö -->
        <div class="data-table-container">
          <table class="data-table">
            <thead>
              <tr>
                <th data-sort="barcode">–®—Ç—Ä–∏—Ö–∫–æ–¥</th>
                <th data-sort="quantity">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                <th data-sort="timestamp">–í—Ä–µ–º—è</th>
                <th>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody id="dataBody">
              <!-- –°—é–¥–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ -->
              <tr>
                <td colspan="4" style="text-align: center; padding: 20px; color: #718096;">
                  –ù–µ—Ç –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
                </td>
              </tr>
            </tbody>
          </table>
        </div>

        <!-- –ü–∞–≥–∏–Ω–∞—Ü–∏—è -->
        <div class="pagination">
          <div class="pagination-info">–ü–æ–∫–∞–∑–∞–Ω–æ 0 –∏–∑ 0 –∑–∞–ø–∏—Å–µ–π</div>
          <div class="pagination-controls">
            <button disabled>–ù–∞–∑–∞–¥</button>
            <span>–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1</span>
            <button disabled>–í–ø–µ—Ä–µ–¥</button>
          </div>
        </div>
      </main>

      <!-- –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å -->
      <aside class="right-sidebar">
        <div class="device-info">
          <h4>ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</h4>
          <div>${generateDeviceId()}</div>
        </div>
        
        <div class="control-buttons">
          <button class="btn-blue" onclick="importData()">–ò–º–ø–æ—Ä—Ç –∏–∑ Excel</button>
          <button class="btn-blue" onclick="exportData()">–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel</button>
          <button class="btn-red" onclick="clearAllData()">–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ</button>
        </div>

        <div class="print-controls">
          <h4>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—á–∞—Ç–∏</h4>
          <div class="print-type">
            <label>–¢–∏–ø —à—Ç—Ä–∏—Ö–∫–æ–¥–∞</label>
            <select>
              <option>CODE128</option>
              <option>EAN-13</option>
              <option>QR Code</option>
            </select>
          </div>
          <div class="print-options">
            <div class="print-option">
              <input type="checkbox" id="showText" checked>
              <label for="showText">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç</label>
            </div>
            <div class="print-option">
              <input type="checkbox" id="showBorder" checked>
              <label for="showBorder">–†–∞–º–∫–∞</label>
            </div>
          </div>
        </div>

        <div class="history-section">
          <h4>–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π</h4>
          <div class="history-list" id="historyList">
            <div class="history-item">
              <div>${new Date().toLocaleTimeString()}</div>
              <div>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ</div>
            </div>
          </div>
        </div>
      </aside>
    </div>

    <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—à–∏–±–æ–∫ -->
    <div class="error-container" id="errorContainer"></div>
  `;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  setupAppEventHandlers();
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  loadData();
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
function generateDeviceId() {
  return 'DEV-' + Math.random().toString(36).substr(2, 9).toUpperCase();
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
async function initApp() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  // –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
  await domReady();
  console.log('‚úÖ DOM –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
  await waitForExternalLibraries();
  console.log('‚úÖ –í–Ω–µ—à–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç—ã
  if (!checkDomElements()) {
    return;
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase
  try {
    await initializeFirebase();
    console.log('‚úÖ Firebase —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase:', error);
    return;
  }
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º—ã
  if (!setupAuthFormHandlers()) {
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  onAuthStateChange((user) => {
    if (user) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', user.email);
      document.getElementById('authContainer').style.display = 'none';
      document.getElementById('appContainer').style.display = 'block';
      initMainApp();
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      document.getElementById('authContainer').style.display = 'block';
      document.getElementById('appContainer').style.display = 'none';
    }
  });
  
  console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
initApp();

window.logout = async function() {
  try {
    await logoutUser();
    document.getElementById('authContainer').style.display = 'block';
    document.getElementById('appContainer').style.display = 'none';
    resetUI(); // ‚Üê –°–±—Ä–∞—Å—ã–≤–∞–µ–º UI –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
    showError('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: ' + error.message);
  }
};
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
  const logoutBtn = document.querySelector('.logout-btn');
  if (logoutBtn) {
    logoutBtn.addEventListener('click', handleLogout);
  }
  
function setupAppEventHandlers() {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —à—Ç—Ä–∏—Ö–∫–æ–¥–æ–≤ (–∏–∑ scanner.js)
  setupScannerHandlers();
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
  const logoutBtn = document.querySelector('.logout-btn');
  if (logoutBtn) {
    logoutBtn.addEventListener('click', handleLogout);
  }
  
  console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
}

function updateDashboard() {
  // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞...');
}

async function loadData() {
  console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    const scannedItems = await getScannedItems();
    renderTable(scannedItems);
    updateDashboardStats(scannedItems);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã
    const expectedItems = await getExpectedItems();
    renderExpectedItems(expectedItems);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
  }
}

function setupRealTimeListeners() {
  try {
    const db = firebase.firestore();
    
    // Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    db.collection('scannedItems')
      .orderBy('timestamp', 'desc')
      .onSnapshot((snapshot) => {
        const items = [];
        snapshot.forEach(doc => {
          items.push({ id: doc.id, ...doc.data() });
        });
        renderTable(items);
        updateDashboardStats(items);
      });
    
    // Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    db.collection('expectedItems')
      .onSnapshot((snapshot) => {
        const items = [];
        snapshot.forEach(doc => {
          items.push({ id: doc.id, ...doc.data() });
        });
        renderExpectedItems(items);
      });
      
    console.log('‚úÖ Real-time listeners —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ real-time listeners:', error);
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
window.deleteItem = async function(itemId) {
  if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?')) {
    try {
      await deleteScannedItem(itemId);
      showSuccess('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω');
    } catch (error) {
      showError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞');
    }
  }
};

window.importData = async function() {
  // –°–æ–∑–¥–∞–µ–º input –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
  const input = document.createElement('input');
  input.type = 'file';
  input.accept = '.xlsx,.xls,.csv,.xlsm';
  input.onchange = async (e) => {
    const file = e.target.files[0];
    if (file) {
      try {
        showMessage('–ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö...', 'info');
        
        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        const data = await readExcelFile(file);
        
        if (!data || data.length === 0) {
          showError('–§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
          return;
        }
        
        showMessage(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${data.length} –∑–∞–ø–∏—Å–µ–π. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º...`, 'info');
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ Firestore
        const result = await importToFirestore(data);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (result.errorCount > 0) {
          showMessage(`–ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –£—Å–ø–µ—à–Ω–æ: ${result.importedCount}, –û—à–∏–±–æ–∫: ${result.errorCount}`, 'warning');
        } else {
          showSuccess(`–£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${result.importedCount} —Ç–æ–≤–∞—Ä–æ–≤!`);
        }
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', error);
        showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —Ñ–∞–π–ª–∞: ' + error.message);
      }
    }
  };
  input.click();
};

window.exportData = async function() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firestore
    const items = await getScannedItems();
    
    if (!items || items.length === 0) {
      showError('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
      return;
    }
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ Excel
    await exportToExcel(items);
    showSuccess('–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ Excel');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:', error);
    showError('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö');
  }
};

window.clearAllData = async function() {
  if (confirm('–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!')) {
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
      alert('–§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
    } catch (error) {
      showError('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
  }
};

window.clearScan = clearScannerInput; // ‚Üê –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–æ–¥—É–ª—è